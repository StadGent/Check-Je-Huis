# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    digip_reno.gks_url_map_heat: "http://warmtefoto.gent.be/?bb_token=[[BB_TOKEN]]&bb_address=[[BB_ADDRESS]]&returnurl=[[BB_RETURN_URL]]"
    digip_reno.gks_url_map_solar: "http://zonnekaart.gent.be/?bb_token=[[BB_TOKEN]]&bb_address=[[BB_ADDRESS]]&returnurl=[[BB_RETURN_URL]]"
    calculation_debug_show: '%env(bool:CALCULATION_DEBUG_SHOW)%'
    gent_cookie_domain: '%env(GENT_COOKIE_DOMAIN)'
    known_referers:
        map_solar:
            - '/stad\.gent(.*)zonnekaart/'
        map_heat:
            - '/stad\.gent(.*)warmtefoto/'
        verbouwforum:
            - '/stad\.gent(.*)wonen-verbouwen/'
    env(CJH_ASSETS_BASEPATH): '/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - !service { class: PDO, factory: 'database_connection:getWrappedConnection' }
            - {db_table: 'session', db_id_col: 'session_id', db_data_col: 'session_value', db_time_col: 'session_time', lock_mode: 1}

    # DETECT MOBILE USERS
    App\EventListener\MobileDeviceListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    # DETECT ENTRY FROM OTHER KNOWN SITES
    App\EventListener\RefererListener:
        arguments:
            - '@session'
            - '%known_referers%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
